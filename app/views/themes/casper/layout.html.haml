!!!
%html{itemscope: true, itemtype: 'http://schema.org/WebPage', prefix:'og: http://ogp.me/ns#'}
  %head
    %meta{charset: 'utf-8'}
    %meta{:'http-equiv' => "X-UA-Compatible", :content => "IE=edge"}
    %meta{name: "HandheldFriendly", content: "True"}
    %meta{name: "viewport", content: "width=device-width, initial-scale=1.0"}
    %title
      - if content
        = "#{content.meta_title} - #{site.name}"
      - elsif @year
        = "#{@year} - #{site.name}"
      - else
        = site.name

    = stylesheet_link_tag "casper", media: :all

    -# renders site and article meta data:
    = bold_meta

    -# optional header content that can be set from within templates:
    = yield :html_head

  -# body_id and body_class can be set from within templates
  %body{id: yield(:body_id), class: "#{content.css_class} nav-closed"}

    -# by default renders nothing, but plugins might hook in here:
    = bold_header

    = render 'themes/casper/navigation'

    %div.site-wrapper

      -# template content goes here
      = yield

      %footer.site-footer.clearfix
        %section.copyright
          - if page[:cover_image].present? and img = site.find_asset(page[:cover_image]) and img.attribution.present?
            - if img.original_url.present?
              = link_to t('.cover_image_attribution', attribution: img.attribution), img.original_url
            - else
              = t '.cover_image_attribution', attribution: img.attribution
            %br
          %a{href: site.url}= site.name
          - if now.year > site.object.created_at.year
            &copy; #{d site.object.created_at, '%Y'} - #{d now, '%Y'}
          - else
            &copy; #{d now, '%Y'}
        %section.poweredby
          - if site.theme_value?("imprint")
            = link_to t('.imprint'), site.theme_value('imprint')
          - else
            = raw t '.published_with', link: link_to('Bold', 'https://bold-app.org')

    -# by default renders nothing, but plugins might hook in here:
    = bold_footer

    = javascript_include_tag 'casper'

